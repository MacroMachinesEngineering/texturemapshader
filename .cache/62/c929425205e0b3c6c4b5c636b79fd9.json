{"id":"js/shader/fragmentP.glsl","dependencies":[{"name":"/Users/gennaroschiano/Documents/GitHub/texturemapshader/package.json","includedInParent":true,"mtime":1606160461000}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n// #pragma glslify: checker = require('glsl-checker')\\n// #pragma glslify: map = require('glsl-map')\\n\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D t1;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nuniform sampler2D map;\\nuniform sampler2D mask;\\nuniform float move;\\nvarying vec2 vCoordinates;\\nvarying vec3 vColors;\\n\\nfloat PI = 3.141592653589793238;\\nvoid main()\\t{\\n    vec4 maskTexture = texture2D(mask,gl_PointCoord);\\n\\tvec2 myUV = vec2(vCoordinates.x/512.,vCoordinates.y/512.);\\n    vec4 image = texture2D(map,myUV);\\n\\tfloat alpha = clamp(0.,1.,abs(vPosition.z/1000.0));\\n    gl_FragColor = image*vec4(vColors,1.0);\\n    \\n    \\n    //gl_FragColor = vec4(myUV,0.0,1.);\\n    gl_FragColor.a *= maskTexture.r*alpha;\\n    // gl_FragColor = vec4(alpha);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shader/fragmentP.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shader/fragmentP.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shader/fragmentP.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shader/fragmentP.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shader/fragmentP.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":844},"source":"js/shader/fragmentP.glsl","original":{"line":1,"column":0}}],"sources":{"js/shader/fragmentP.glsl":"module.exports=\"#define GLSLIFY 1\\n// #pragma glslify: checker = require('glsl-checker')\\n// #pragma glslify: map = require('glsl-map')\\n\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D t1;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nuniform sampler2D map;\\nuniform sampler2D mask;\\nuniform float move;\\nvarying vec2 vCoordinates;\\nvarying vec3 vColors;\\n\\nfloat PI = 3.141592653589793238;\\nvoid main()\\t{\\n    vec4 maskTexture = texture2D(mask,gl_PointCoord);\\n\\tvec2 myUV = vec2(vCoordinates.x/512.,vCoordinates.y/512.);\\n    vec4 image = texture2D(map,myUV);\\n\\tfloat alpha = clamp(0.,1.,abs(vPosition.z/1000.0));\\n    gl_FragColor = image*vec4(vColors,1.0);\\n    \\n    \\n    //gl_FragColor = vec4(myUV,0.0,1.);\\n    gl_FragColor.a *= maskTexture.r*alpha;\\n    // gl_FragColor = vec4(alpha);\\n}\";"},"lineCount":null}},"error":null,"hash":"f35529862467bbf48418e82d28d2df47","cacheData":{"env":{}}}